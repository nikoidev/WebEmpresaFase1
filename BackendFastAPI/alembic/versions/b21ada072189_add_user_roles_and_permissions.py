"""Add user roles and permissions

Revision ID: b21ada072189
Revises: 96d62e3e1be8
Create Date: 2025-09-11 15:10:30.174361

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b21ada072189'
down_revision = '96d62e3e1be8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_website_contact_messages_id'), table_name='website_contact_messages')
    op.drop_index(op.f('ix_website_contact_messages_status'), table_name='website_contact_messages')
    op.drop_table('website_contact_messages')
    
    # Crear el enum type si no existe
    connection = op.get_bind()
    role_enum = sa.Enum('SUPER_ADMIN', 'ADMIN', 'EDITOR', 'MODERATOR', 'VIEWER', name='userrole')
    result = connection.execute(sa.text("SELECT 1 FROM pg_type WHERE typname = 'userrole'"))
    if not result.fetchone():
        role_enum.create(connection)
    
    # Agregar columna como nullable primero
    op.add_column('auth_user', sa.Column('role', role_enum, nullable=True))
    
    # Establecer valores por defecto para usuarios existentes
    op.execute("UPDATE auth_user SET role = 'VIEWER' WHERE role IS NULL")
    
    # Hacer la columna NOT NULL
    op.alter_column('auth_user', 'role', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('auth_user', 'role')
    
    # Eliminar el enum type
    sa.Enum(name='userrole').drop(op.get_bind())
    op.create_table('website_contact_messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('company', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('subject', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('admin_response', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('responded_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('website_contact_messages_pkey'))
    )
    op.create_index(op.f('ix_website_contact_messages_status'), 'website_contact_messages', ['status'], unique=False)
    op.create_index(op.f('ix_website_contact_messages_id'), 'website_contact_messages', ['id'], unique=False)
    # ### end Alembic commands ###
